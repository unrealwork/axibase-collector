(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{243:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"docker-certificates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-certificates","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Certificates")]),a("p",[e._v("Protecting the Docker daemon socket with OpenSSL.\nMake sure you replace "),a("strong",[a("code",[e._v("$HOST")])]),e._v(" in the following examples with the DNS name of the target Docker host.")]),a("blockquote",[a("p",[e._v("Credit: "),a("a",{attrs:{href:"https://docs.docker.com/engine/security/https/#create-a-ca-server-and-client-keys-with-openssl",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/security/https/#create-a-ca-server-and-client-keys-with-openssl")])])]),a("h2",{attrs:{id:"generate-private-and-public-keys-for-a-ca-certificate-authority"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generate-private-and-public-keys-for-a-ca-certificate-authority","aria-hidden":"true"}},[e._v("#")]),e._v(" Generate Private and Public Keys for a CA (Certificate Authority)")]),a("p",[e._v("Create a directory for certificate files:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mkdir /home/ubuntu/certs\ncd /home/ubuntu/certs\n")])]),a("p",[e._v("Generate a private key:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl genrsa -aes256 -out ca-key.pem 4096\n")])]),a("p",[e._v("Generate a certificate request using the pass phrase for "),a("code",[e._v("ca-key.pem")]),e._v(":")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem\n")])]),a("p",[e._v("Fill out the fields.")]),a("p",[e._v("Make sure you set Common Name to the DNS name of the Docker host: "),a("strong",[a("code",[e._v("$HOST")])])]),a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{attrs:{class:"token attr-name"}},[e._v("Country")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("Name (2 letter code) [AU]:US")]),e._v("\n"),a("span",{attrs:{class:"token attr-name"}},[e._v("State")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("or Province Name (full name) [Some-State]:CA")]),e._v("\n"),a("span",{attrs:{class:"token attr-name"}},[e._v("Locality")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("Name (eg, city) []:Cupertino")]),e._v("\n"),a("span",{attrs:{class:"token attr-name"}},[e._v("Organization")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("Name (eg, company) [Internet Widgits Pty Ltd]:MyCompany")]),e._v("\n"),a("span",{attrs:{class:"token attr-name"}},[e._v("Organizational")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("Unit Name (eg, section) []:")]),e._v("\n"),a("span",{attrs:{class:"token attr-name"}},[e._v("Common")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("Name (e.g. server FQDN or YOUR name) []:$HOST")]),e._v("\n"),a("span",{attrs:{class:"token attr-name"}},[e._v("Email")]),e._v(" "),a("span",{attrs:{class:"token attr-value"}},[e._v("Address []:")]),e._v("\n")])]),a("h2",{attrs:{id:"create-a-server-key-and-certificate-signing-request-csr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-server-key-and-certificate-signing-request-csr","aria-hidden":"true"}},[e._v("#")]),e._v(" Create a Server Key and Certificate Signing Request (CSR)")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl genrsa -out server-key.pem 4096\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('openssl req -subj "/CN=$HOST" -sha256 -new -key server-key.pem -out server.csr\n')])]),a("h2",{attrs:{id:"sign-the-public-key-with-our-ca"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sign-the-public-key-with-our-ca","aria-hidden":"true"}},[e._v("#")]),e._v(" Sign the Public Key with our CA")]),a("p",[e._v("TLS connections need to be specified when creating the certificate, as they can be made via the IP address as well as the DNS name. For example, to allow connections\nusing "),a("code",[e._v("10.10.10.20")]),e._v(" and "),a("code",[e._v("127.0.0.1")]),e._v(":")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("echo subjectAltName = IP:10.10.10.20,IP:127.0.0.1 > extfile.cnf\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \\\n      -CAcreateserial -out server-cert.pem -extfile extfile.cnf\n")])]),a("h2",{attrs:{id:"create-a-client-key-and-certificate-signing-request-for-client-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-client-key-and-certificate-signing-request-for-client-authentication","aria-hidden":"true"}},[e._v("#")]),e._v(" Create a Client Key and Certificate Signing Request for Client Authentication")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl genrsa -out key.pem 4096\n")])]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl req -subj '/CN=client' -new -key key.pem -out client.csr\n")])]),a("p",[e._v("To make the key suitable for client authentication, create an extensions config file:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("echo extendedKeyUsage = clientAuth > extfile.cnf\n")])]),a("p",[e._v("Sign the public key:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \\\n      -CAcreateserial -out cert.pem -extfile extfile.cnf\n")])]),a("p",[e._v("After generating "),a("code",[e._v("cert.pem")]),e._v(" and "),a("code",[e._v("server-cert.pem")]),e._v(", you can safely remove the\ntwo certificate signing requests:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("rm -v client.csr server.csr\n")])]),a("h2",{attrs:{id:"set-permissions-to-private-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-permissions-to-private-keys","aria-hidden":"true"}},[e._v("#")]),e._v(" Set Permissions to Private Keys")]),a("p",[e._v("With a default "),a("code",[e._v("umask")]),e._v(" of 022, your secret keys will be "),a("em",[e._v("world-readable")]),e._v(" and\nwritable for you and your group.")]),a("p",[e._v("In order to protect your keys from accidental damage, you will want to remove their\nwrite permissions. To make them only readable by you, change file modes as follows:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("chmod -v 0400 ca-key.pem key.pem server-key.pem\n")])]),a("p",[e._v("Certificates can be world-readable, but you might want to remove write access to\nprevent accidental damage:")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("chmod -v 0444 ca.pem server-cert.pem cert.pem\n")])]),a("p",[e._v("Now you can make the Docker daemon only accept connections from clients\nproviding a certificate trusted by our CA.")])])}],!1,null,null,null);t.default=s.exports}}]);